{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\nmodule.exports = {\n  transformRequest: [function (data, headers) {\n    if (utils.isFormData(data)) {\n      return data;\n    }\n\n    if (utils.isArrayBuffer(data)) {\n      return data;\n    }\n\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n\n    if (utils.isObject(data) && !utils.isFile(data) && !utils.isBlob(data)) {\n      // Set application/json if no Content-Type has been specified\n      if (!utils.isUndefined(headers)) {\n        utils.forEach(headers, function (val, key) {\n          if (key.toLowerCase() === 'content-type') {\n            headers['Content-Type'] = val;\n          }\n        });\n\n        if (utils.isUndefined(headers['Content-Type'])) {\n          headers['Content-Type'] = 'application/json;charset=utf-8';\n        }\n      }\n\n      return JSON.stringify(data);\n    }\n\n    return data;\n  }],\n  transformResponse: [function (data) {\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n\n      try {\n        data = JSON.parse(data);\n      } catch (e) {\n        /* Ignore */\n      }\n    }\n\n    return data;\n  }],\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    },\n    patch: utils.merge(DEFAULT_CONTENT_TYPE),\n    post: utils.merge(DEFAULT_CONTENT_TYPE),\n    put: utils.merge(DEFAULT_CONTENT_TYPE)\n  },\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN'\n};","map":{"version":3,"names":["utils","require","PROTECTION_PREFIX","DEFAULT_CONTENT_TYPE","module","exports","transformRequest","data","headers","isFormData","isArrayBuffer","isArrayBufferView","buffer","isObject","isFile","isBlob","isUndefined","forEach","val","key","toLowerCase","JSON","stringify","transformResponse","replace","parse","e","common","patch","merge","post","put","timeout","xsrfCookieName","xsrfHeaderName"],"sources":["C:/Users/jatin/OneDrive/Desktop/New folder (18)/SimpleYoutubeClone_ReactJS/youtube-clone-reactjs/node_modules/axios/lib/defaults.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils');\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nmodule.exports = {\n  transformRequest: [function (data, headers) {\n    if(utils.isFormData(data)) {\n      return data;\n    }\n    if (utils.isArrayBuffer(data)) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isObject(data) && !utils.isFile(data) && !utils.isBlob(data)) {\n      // Set application/json if no Content-Type has been specified\n      if (!utils.isUndefined(headers)) {\n        utils.forEach(headers, function (val, key) {\n          if (key.toLowerCase() === 'content-type') {\n            headers['Content-Type'] = val;\n          }\n        });\n\n        if (utils.isUndefined(headers['Content-Type'])) {\n          headers['Content-Type'] = 'application/json;charset=utf-8';\n        }\n      }\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function (data) {\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    },\n    patch: utils.merge(DEFAULT_CONTENT_TYPE),\n    post: utils.merge(DEFAULT_CONTENT_TYPE),\n    put: utils.merge(DEFAULT_CONTENT_TYPE)\n  },\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN'\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIC,iBAAiB,GAAG,cAAxB;AACA,IAAIC,oBAAoB,GAAG;EACzB,gBAAgB;AADS,CAA3B;AAIAC,MAAM,CAACC,OAAP,GAAiB;EACfC,gBAAgB,EAAE,CAAC,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;IAC1C,IAAGR,KAAK,CAACS,UAAN,CAAiBF,IAAjB,CAAH,EAA2B;MACzB,OAAOA,IAAP;IACD;;IACD,IAAIP,KAAK,CAACU,aAAN,CAAoBH,IAApB,CAAJ,EAA+B;MAC7B,OAAOA,IAAP;IACD;;IACD,IAAIP,KAAK,CAACW,iBAAN,CAAwBJ,IAAxB,CAAJ,EAAmC;MACjC,OAAOA,IAAI,CAACK,MAAZ;IACD;;IACD,IAAIZ,KAAK,CAACa,QAAN,CAAeN,IAAf,KAAwB,CAACP,KAAK,CAACc,MAAN,CAAaP,IAAb,CAAzB,IAA+C,CAACP,KAAK,CAACe,MAAN,CAAaR,IAAb,CAApD,EAAwE;MACtE;MACA,IAAI,CAACP,KAAK,CAACgB,WAAN,CAAkBR,OAAlB,CAAL,EAAiC;QAC/BR,KAAK,CAACiB,OAAN,CAAcT,OAAd,EAAuB,UAAUU,GAAV,EAAeC,GAAf,EAAoB;UACzC,IAAIA,GAAG,CAACC,WAAJ,OAAsB,cAA1B,EAA0C;YACxCZ,OAAO,CAAC,cAAD,CAAP,GAA0BU,GAA1B;UACD;QACF,CAJD;;QAMA,IAAIlB,KAAK,CAACgB,WAAN,CAAkBR,OAAO,CAAC,cAAD,CAAzB,CAAJ,EAAgD;UAC9CA,OAAO,CAAC,cAAD,CAAP,GAA0B,gCAA1B;QACD;MACF;;MACD,OAAOa,IAAI,CAACC,SAAL,CAAef,IAAf,CAAP;IACD;;IACD,OAAOA,IAAP;EACD,CA1BiB,CADH;EA6BfgB,iBAAiB,EAAE,CAAC,UAAUhB,IAAV,EAAgB;IAClC,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;MAC5BA,IAAI,GAAGA,IAAI,CAACiB,OAAL,CAAatB,iBAAb,EAAgC,EAAhC,CAAP;;MACA,IAAI;QACFK,IAAI,GAAGc,IAAI,CAACI,KAAL,CAAWlB,IAAX,CAAP;MACD,CAFD,CAEE,OAAOmB,CAAP,EAAU;QAAE;MAAc;IAC7B;;IACD,OAAOnB,IAAP;EACD,CARkB,CA7BJ;EAuCfC,OAAO,EAAE;IACPmB,MAAM,EAAE;MACN,UAAU;IADJ,CADD;IAIPC,KAAK,EAAE5B,KAAK,CAAC6B,KAAN,CAAY1B,oBAAZ,CAJA;IAKP2B,IAAI,EAAE9B,KAAK,CAAC6B,KAAN,CAAY1B,oBAAZ,CALC;IAMP4B,GAAG,EAAE/B,KAAK,CAAC6B,KAAN,CAAY1B,oBAAZ;EANE,CAvCM;EAgDf6B,OAAO,EAAE,CAhDM;EAkDfC,cAAc,EAAE,YAlDD;EAmDfC,cAAc,EAAE;AAnDD,CAAjB"},"metadata":{},"sourceType":"script"}